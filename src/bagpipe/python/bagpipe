#!/usr/bin/env python

import tarfile 
import tempfile
import StringIO
import os, os.path
import subprocess
import sys
import signal

def bagpipe(args):
  configTar = StringIO.StringIO(sys.stdin.read())
  configDir = tempfile.mkdtemp()
  tarfile.open(fileobj=configTar, mode='r').extractall(configDir)
  root    = os.environ['BAGPIPE']
  bagpipe = ["racket", os.path.join(root,"src/bagpipe/racket/main/bagpipe.rkt")]
  subprocess.call(bagpipe + ["verify", configDir] + args)

def sshd():
  subprocess.call(["service", "ssh", "start"])

if __name__ == '__main__':
  if len(sys.argv) >= 2 and sys.argv[1] == "verify":
    sshd()
    bagpipe(sys.argv[2:])
  elif len(sys.argv) == 2 and sys.argv[1] == "slave":
    sshd()
    signal.pause()
  else:
    print("""
Usage: bagpipe COMMAND

The bagpipe commands are:

   verify ARGS   Verifies the SETUP passed via standard input. The SETUP
                 must be a tar file that contains a file called setup.rkt.
                 setup.rkt must define two variables called `as` and `policy`;
                 the former defines the AS that bagpipe verifies using the 
                 POLICY defined by the latter. ARGS is passed to both the AS 
                 and POLICY.

   slave         Allow another bagpipe instance to use this machine.

   help          Display this help message and exit. For additional help visit:
                 http://konne.me/bagpipe
""")
